apply plugin: 'java'
apply plugin: 'idea'

//To use spring boot tasks to build and run the code
apply plugin: 'spring-boot'

ext {
    springVersion = '4.2.4.RELEASE'
    springBootVersion = '1.3.1.RELEASE'
    jacksonVersion = '2.6.4'
    jsonpathVersion = '0.8.1'
    httpComponentsVersion = '4.3.3'
    logbackVersion = '1.1.3'
    slf4jVersion = '1.7.13'
    cglibVersion = '3.2.0'
    aspectjVersion = '1.8.7'
    mysqlConnectorVersion = '5.1.38'
    junitVersion = '4.12'
    jodaVersion = '2.7'
    codecVersion = '1.10'
    mybatisVersion = '3.3.0'
    mybatisSpringVersion = '1.2.3'
    druidVersion = '1.0.16'
    commonsPoolVersion = '2.0'
    apacheCommonsLang3Version = '3.3.2'
    guavaVersion = '18.0'
    liquibaseVersion = '3.4.2'
    gradleLiquibaseVersion = '1.0.2'
}

springBoot {
    mainClass = "im.vinci.VinciApplication"
}

buildscript {
    ext {
        gradleLiquibaseVersion = '1.0.2'
        mysqlConnectorVersion = '5.1.38'
        springBootVersion = '1.3.1.RELEASE'

    }

    repositories {
        mavenCentral()
        maven {
            url "http://download.java.net/maven/2"
        }
        maven {
            url 'http://repo.spring.io/plugins-release'
        }
    }

    dependencies {
        //classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.5'
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        // The database driver for MySQL here
        classpath "mysql:mysql-connector-java:$mysqlConnectorVersion"
        classpath "net.saliman:gradle-liquibase-plugin:$gradleLiquibaseVersion"

        //To provide remote execution and file transfer features for project release
        classpath "org.hidetake:gradle-ssh-plugin:0.3.11"
    }
}


repositories {
    maven { url 'http://maven.oschina.net/content/groups/public/' }
}

dependencies {
    //spring 相关
    compile "org.springframework:spring-core:$springVersion"
    compile "org.springframework:spring-jdbc:$springVersion"
    compile "org.springframework:spring-webmvc:$springVersion"
    compile "org.springframework:spring-context:$springVersion"
    compile "org.springframework:spring-context-support:$springVersion"
    compile "org.springframework:spring-aop:$springVersion"
    compile "org.springframework:spring-aspects:$springVersion"
    compile "org.aspectj:aspectjweaver:$aspectjVersion"

//    compile "org.springframework.boot:spring-boot-configuration-processor:$springBootVersion"

    //boot web start
    compile ("org.springframework.boot:spring-boot-starter-web:$springBootVersion") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile "org.springframework.boot:spring-boot-starter-jetty:$springBootVersion"
    compile ("org.springframework.boot:spring-boot-starter-freemarker:$springBootVersion") {
        exclude module: "spring-boot-starter-web"
        exclude module: "spring-boot-starter-tomcat"
    }
    //apache commons
    compile "org.apache.commons:commons-lang3:$apacheCommonsLang3Version"
    compile 'commons-beanutils:commons-beanutils:1.9.2'
    compile 'net.sf.ehcache:ehcache:2.10.1'
    compile 'commons-fileupload:commons-fileupload:1.3.1'
    compile 'com.alibaba:fastjson:1.2.7'


    compile "commons-codec:commons-codec:$codecVersion"
    // The components used to handle http requests
    compile "org.apache.httpcomponents:httpclient:$httpComponentsVersion"

    compile "cglib:cglib:$cglibVersion"
    //google guava utils
    compile "com.google.guava:guava:$guavaVersion"
    //log相关
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
    compile "org.slf4j:log4j-over-slf4j:$slf4jVersion"
    compile "org.slf4j:jul-to-slf4j:$slf4jVersion"
    compile "ch.qos.logback:logback-classic:$logbackVersion"
    compile "ch.qos.logback:logback-core:$logbackVersion"

    compile 'org.codehaus.janino:janino:2.6.1'

    // The database driver for MySQL here
    compile "mysql:mysql-connector-java:$mysqlConnectorVersion"

    //mysql connection pool
    compile "com.alibaba:druid:$druidVersion"

    // Tools used to create ORM for database
    compile "org.mybatis:mybatis:$mybatisVersion"
    compile "org.mybatis:mybatis-spring:$mybatisSpringVersion"

    compile "joda-time:joda-time:$jodaVersion"

    // To automatically convert between json string and java object
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"

    //test
    testCompile "junit:junit:$junitVersion"
    testCompile "org.springframework:spring-test:$springVersion"
//    testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testCompile "org.hamcrest:hamcrest-core:1.3"
    testCompile "org.hamcrest:hamcrest-library:1.3"
    testCompile "org.mockito:mockito-core:1.10.19"

    testCompile "mysql:mysql-connector-mxj:5.0.12"
    testCompile "org.apache.commons:commons-io:1.3.2"
//    test "org.liquibase:liquibase-core:$liquibaseVersion"
//    test "net.saliman:gradle-liquibase-plugin:$gradleLiquibaseVersion"
}

compileJava.dependsOn(processResources)

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}